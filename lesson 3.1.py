# 1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую
# их деление. Числа запрашивать у пользователя, предусмотреть обработку ситуации деления
# на ноль.
def delet(first, second):
    c = first / second
    return c


first, second = map(int, input('Введите два числа через пробел например 675 80 -').split())
print(delet(first, second))


# 2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя:
# имя, фамилия, год рождения, город проживания, email, телефон.
# Функция должна принимать параметры как именованные аргументы. Реализовать вывод данных о
# пользователе одной строкой.
def data(var1, var2, var3, var4, var5, var6):
    print(var1 + var2 + var3 + var4 + var5 + var6)


user_data = {'имя': '', 'фамилия': '', 'год рождения': '', 'город проживания': '', 'email': '', 'телефон': ''}
for f in user_data.keys():
    user_data_value = input(f'Введите значение "{f}":')
    user_data[f] = str(user_data_value)

ar1 = str(user_data['имя'])
ar2 = str(user_data['фамилия'])
ar3 = str(user_data['год рождения'])
ar4 = str(user_data['город проживания'])
ar5 = str(user_data['email'])
ar6 = str(user_data['телефон'])
data(var1=ar1, var2=ar2, var3=ar3, var4=ar4, var6=ar6, var5=ar5)


# 3. Реализовать функцию my_func(), которая принимает три позиционных аргумента, и
# возвращает сумму наибольших двух аргументов.


def max1(ar1, ar2, ar3):
    if ar1>ar2:
        m = ar1
    else: m =ar2

    if ar2 > ar3:
        n = ar2
    else:
        n = ar3
    summ = m + n
    return summ

print(max1(10, 20, 30))

# 4. Программа принимает действительное положительное число x и целое отрицательное число y.
# необходимо выполнить возведение числа x в степень y. Задание необходимо реализовать в виде
# функции my_func(x, y). При решении задания необходимо обойтись без встроенной функции
# возведения числа в степень. Подсказка: попробуйте решить задачу двумя способами.
# Первый — возведение в степень с помощью оператора **. Второй — более сложная реализация
# без оператора **, предусматривающая использование цикла.

x = 8
y = -2


def funcy(x, y):
    c = 0
    m = 1
    c = x ** y
    for i in range(y, 0):
        if y >= 0: m = m * x
        else: m = m/x
    return c, m
print(funcy(x, y))

# 5. Программа запрашивает у пользователя строку чисел, разделенных пробелом. При нажатии Enter
# должна выводиться сумма чисел. Пользователь может продолжить ввод чисел, разделенных пробелом
# и снова нажать Enter. Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме.
# Но если вместо числа вводится специальный символ, выполнение программы завершается.
# Если специальный символ введен после нескольких чисел, то вначале нужно добавить
# сумму этих чисел к полученной ранее сумме и после этого завершить программу.

m = 0
chr(m)
print(ord("0"))
print(ord("9"))
print(ord("q"))
c = 0
while m == 0:
    string = input("Enter digit like 1   6    8    4")
    for el in string:
        n= ord(el)
        if 47< n < 58:
            digit = int(chr(n))
            c += digit
            print(c)
    if n == 113: m += 1

# 6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую
# его же, но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
# Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных
# пробелом. Каждое слово состоит из латинских букв в нижнем регистре. Сделать вывод исходной
# строки, но каждое слово должно начинаться с заглавной буквы. Необходимо использовать написанную
# ранее функцию int_func().***

def wordsL (word): #принятие слова
    m = list(word)
    c = 0
    for i in m:     #приведения символов A-Z слова к нижнему регистру для латыни и руского шрифта
        n = ord(i)
        if 65 < n < 91 or 1039 < n < 1072:
            n = n + 32
            m[c] = chr(n)
        c += 1

    n= ord(m[0]) #первый символ сделать верхним
    if 96 < n < 123 or 1071 < n < 1104:
        n = n - 32
        m[0] = chr(n)
    return (''.join(m)) # суммирование в str


print(ord("Z"))
print(ord("z"))
print(ord("Я"))
print(ord("я"))
string = input("Введите текст")
words = string.split(" ")
for el in words:
    print(wordsL(el), end=" ")